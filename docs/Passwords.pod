$Revision$


=pod

Z<>

=head1 MIG AND PASSWORDS

Z<>

=head2 DISCLAIMER

Note: this password scheme is not 100% secure!  It's probably not even 90%
secure.  Anyone who really wants to get to your images can get around this
protection by viewing the source of the page they are viewing and going to
image URLs directly and such.  As such you shouldn't use this if you really
need your images to be protected.  I hope to fix this security problem in a
future version of Mig but right now this is just the way it is.

=head2 PASSWORD PROTECTION

You may want to protect some folders from being viewed by the public.
You can do this by assigning usernames and passwords for access control
to particular folders.

To do this, add lines like this one to your F<config.php> file:

    $protect['./Pictures_of_me']['joe'] = 'IBDXWbkBirMfU';

The part in the first set of []'s is the directory.  The second set of []'s
contains the username.  The part in '' at the end is the password, in unix
C<crypt()> format.

The directory name is the value of C<currDir> as seen in any URL when you
go to that folder.  Some examples might be:

    ./Pictures_of_me
    ./People/Stephanie
    ./Trips/Europe

The password protection includes subfolders - so if you have a
F<Trips/Europe> folder, and it contains many subfolders, they will also
have the same password protection properties.

Note that if you have a defined password policy for say
F<Trips/Europe/Belgium>, it will override F<Trips> or F<Trips/Europe>.  The
rule is simple - the most specific definition wins.  Or, one could say the
longest folder name wins.

A more complete example might be something like this:

    $protect['./People/Stephanie']['dan']      = 'NI6kjeu0Bu5OA';
    $protect['./People/Stephanie']['kate']     = 'BSkfNxImwPHeQ';
    $protect['./People/Stephanie']['mom']      = 'IGSQpYrjm0znM';

    $protect['./Trips/Europe/Belgium']['joe']  = 'NLmqM5pt3s6Xc';
    $protect['./Trips/Europe']['fig']          = 'RRElq4KBFcLhk';

It is important to use only the C<currDir> string you want.  Do not add a
trailing slash, and do not omit any characters at the end.  Do not omit the
leading C<./> either.

So if you have C<currDir=./People/Stephanie>, use C<./People/Stephanie>
and not C<People/Stephanie> or C<./People/Stephanie/>.

=head2 CRYPT FORMAT

But wait!  How do I generate unix C<crypt()> format passwords?

Well, you can do it like this in PHP:

    <?php
        $pass = 'somepassword';
        $salt = 'Ai';
        print crypt($pass, $salt);
    ?>

The salt is any two-character combination - it is used to seed the random
generation process, so to speak.  Any two characters are good enough (but
you can't use ":" (colon) in a salt).

If you have access to Perl somewhere (most of us do), you can also do it
this way:

    perl -e 'print crypt("password","xy"),"\n";'

Where C<password> should be the password to encrypt, and C<xy> is the
two-character salt (any two characters beside a colon (":") will do).

=head2 HOW DO I PROTECT THE MAIN LEVEL ('currDir=.') ?

You could set up an F<.htaccess> file in Apache, or the equivalent
mechanism for your server, on your gallery base directory.

If you want to do it using Mig's own password scheme, just set something
like this:

    $protect['.']['kate'] = 'BSkfNxImwPHeQ';

=cut

